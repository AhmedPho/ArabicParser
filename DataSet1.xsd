<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DataSet1" targetNamespace="http://tempuri.org/DataSet1.xsd" xmlns:mstns="http://tempuri.org/DataSet1.xsd" xmlns="http://tempuri.org/DataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="Database1ConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="Database1ConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.ArabicParser.Properties.Settings.GlobalReference.Default.Database1ConnectionString" Provider="Microsoft.SqlServerCe.Client.4.0" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="GrammersTableAdapter" GeneratorDataComponentClassName="GrammersTableAdapter" Name="Grammers" UserDataComponentName="GrammersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Database1ConnectionString (Settings)" DbObjectName="Grammers" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [Grammers] WHERE (([ID] = @Original_ID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [Grammers] ([Grammer], [IsMaster]) VALUES (@Grammer, @IsMaster)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Grammer" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Grammer" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsMaster" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsMaster" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        Grammer, ID, IsMaster
FROM            Grammers</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [Grammers] SET [Grammer] = @Grammer, [IsMaster] = @IsMaster WHERE (([ID] = @Original_ID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Grammer" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Grammer" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsMaster" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsMaster" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Grammer" DataSetColumn="Grammer" />
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="IsMaster" DataSetColumn="IsMaster" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="Database1ConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO Grammers
                         (Grammer, IsMaster)
VALUES        (@Grammer,@IsMaster)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="Grammer" ColumnName="Grammer" DataSourceName="Grammers" DataTypeServer="nvarchar(500)" DbType="String" Direction="Input" ParameterName="@Grammer" Precision="0" ProviderType="NVarChar" Scale="0" Size="500" SourceColumn="Grammer" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="IsMaster" ColumnName="IsMaster" DataSourceName="Grammers" DataTypeServer="bit" DbType="Boolean" Direction="Input" ParameterName="@IsMaster" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsMaster" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TagsTableAdapter" GeneratorDataComponentClassName="TagsTableAdapter" Name="Tags" UserDataComponentName="TagsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Database1ConnectionString (Settings)" DbObjectName="Tags" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [Tags] WHERE (([ID] = @Original_ID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [Tags] ([Tag], [IsTerminal]) VALUES (@Tag, @IsTerminal)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Tag" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Tag" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsTerminal" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsTerminal" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        ID, Tag, IsTerminal
FROM            Tags</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [Tags] SET [Tag] = @Tag, [IsTerminal] = @IsTerminal WHERE (([ID] = @Original_ID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Tag" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Tag" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsTerminal" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsTerminal" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Tag" DataSetColumn="Tag" />
              <Mapping SourceColumn="IsTerminal" DataSetColumn="IsTerminal" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="Database1ConnectionString (Settings)" DbObjectName="Tags" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetTerminals" GeneratorSourceName="FillBy" GetMethodModifier="Public" GetMethodName="GetTerminals" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetTerminals" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        ID, Tag, IsTerminal
FROM            Tags
WHERE        (IsTerminal = 1)</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="Database1ConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO Tags
                         (Tag, IsTerminal)
VALUES        (@Tag,@IsTerminal)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="Tag" ColumnName="Tag" DataSourceName="Tags" DataTypeServer="nvarchar(100)" DbType="String" Direction="Input" ParameterName="@Tag" Precision="0" ProviderType="NVarChar" Scale="0" Size="100" SourceColumn="Tag" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="IsTerminal" ColumnName="IsTerminal" DataSourceName="Tags" DataTypeServer="bit" DbType="Boolean" Direction="Input" ParameterName="@IsTerminal" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsTerminal" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="WordsTableAdapter" GeneratorDataComponentClassName="WordsTableAdapter" Name="Words" UserDataComponentName="WordsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Database1ConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        Words.Word, Words.IDTag, Tags.ID, Tags.Tag, Tags.IsTerminal
FROM            Words CROSS JOIN
                         Tags</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Word" DataSetColumn="Word" />
              <Mapping SourceColumn="IDTag" DataSetColumn="IDTag" />
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Tag" DataSetColumn="Tag" />
              <Mapping SourceColumn="IsTerminal" DataSetColumn="IsTerminal" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="Database1ConnectionString (Settings)" DbObjectName="Tags" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetTag" GeneratorSourceName="FillBy" GetMethodModifier="Public" GetMethodName="GetTag" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetTag" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        Tags.Tag, Tags.IsTerminal
FROM            Words INNER JOIN
                         Tags ON Words.IDTag = Tags.ID
WHERE        (Words.Word = @Word)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="Word" ColumnName="Word" DataSourceName="Words" DataTypeServer="nvarchar(100)" DbType="String" Direction="Input" ParameterName="@Word" Precision="0" ProviderType="NVarChar" Scale="0" Size="100" SourceColumn="Word" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="Database1ConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertQuery" Modifier="Public" Name="InsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="InsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO Words
                         (Word, IDTag)
VALUES        (@Word,@IDTag)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="Word" ColumnName="Word" DataSourceName="Words" DataTypeServer="nvarchar(100)" DbType="String" Direction="Input" ParameterName="@Word" Precision="0" ProviderType="NVarChar" Scale="0" Size="100" SourceColumn="Word" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="IDTag" ColumnName="IDTag" DataSourceName="Words" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@IDTag" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IDTag" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="DataSet1" msprop:Generator_UserDSName="DataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Grammers" msprop:Generator_TableClassName="GrammersDataTable" msprop:Generator_TableVarName="tableGrammers" msprop:Generator_RowChangedName="GrammersRowChanged" msprop:Generator_TablePropName="Grammers" msprop:Generator_RowDeletingName="GrammersRowDeleting" msprop:Generator_RowChangingName="GrammersRowChanging" msprop:Generator_RowEvHandlerName="GrammersRowChangeEventHandler" msprop:Generator_RowDeletedName="GrammersRowDeleted" msprop:Generator_RowClassName="GrammersRow" msprop:Generator_UserTableName="Grammers" msprop:Generator_RowEvArgName="GrammersRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Grammer" msprop:Generator_ColumnVarNameInTable="columnGrammer" msprop:Generator_ColumnPropNameInRow="Grammer" msprop:Generator_ColumnPropNameInTable="GrammerColumn" msprop:Generator_UserColumnName="Grammer" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="500" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID" type="xs:int" />
              <xs:element name="IsMaster" msprop:Generator_ColumnVarNameInTable="columnIsMaster" msprop:Generator_ColumnPropNameInRow="IsMaster" msprop:Generator_ColumnPropNameInTable="IsMasterColumn" msprop:Generator_UserColumnName="IsMaster" type="xs:boolean" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Tags" msprop:Generator_TableClassName="TagsDataTable" msprop:Generator_TableVarName="tableTags" msprop:Generator_RowChangedName="TagsRowChanged" msprop:Generator_TablePropName="Tags" msprop:Generator_RowDeletingName="TagsRowDeleting" msprop:Generator_RowChangingName="TagsRowChanging" msprop:Generator_RowEvHandlerName="TagsRowChangeEventHandler" msprop:Generator_RowDeletedName="TagsRowDeleted" msprop:Generator_RowClassName="TagsRow" msprop:Generator_UserTableName="Tags" msprop:Generator_RowEvArgName="TagsRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID" type="xs:int" />
              <xs:element name="Tag" msprop:Generator_ColumnVarNameInTable="columnTag" msprop:Generator_ColumnPropNameInRow="Tag" msprop:Generator_ColumnPropNameInTable="TagColumn" msprop:Generator_UserColumnName="Tag" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="IsTerminal" msprop:Generator_ColumnVarNameInTable="columnIsTerminal" msprop:Generator_ColumnPropNameInRow="IsTerminal" msprop:Generator_ColumnPropNameInTable="IsTerminalColumn" msprop:Generator_UserColumnName="IsTerminal" type="xs:boolean" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Words" msprop:Generator_TableClassName="WordsDataTable" msprop:Generator_TableVarName="tableWords" msprop:Generator_RowChangedName="WordsRowChanged" msprop:Generator_TablePropName="Words" msprop:Generator_RowDeletingName="WordsRowDeleting" msprop:Generator_RowChangingName="WordsRowChanging" msprop:Generator_RowEvHandlerName="WordsRowChangeEventHandler" msprop:Generator_RowDeletedName="WordsRowDeleted" msprop:Generator_RowClassName="WordsRow" msprop:Generator_UserTableName="Words" msprop:Generator_RowEvArgName="WordsRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Word" msprop:Generator_ColumnVarNameInTable="columnWord" msprop:Generator_ColumnPropNameInRow="Word" msprop:Generator_ColumnPropNameInTable="WordColumn" msprop:Generator_UserColumnName="Word" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="IDTag" msprop:Generator_ColumnVarNameInTable="columnIDTag" msprop:Generator_ColumnPropNameInRow="IDTag" msprop:Generator_ColumnPropNameInTable="IDTagColumn" msprop:Generator_UserColumnName="IDTag" type="xs:int" minOccurs="0" />
              <xs:element name="ID" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID" type="xs:int" minOccurs="0" />
              <xs:element name="Tag" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnTag" msprop:Generator_ColumnPropNameInRow="Tag" msprop:Generator_ColumnPropNameInTable="TagColumn" msprop:Generator_UserColumnName="Tag" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="IsTerminal" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnIsTerminal" msprop:Generator_ColumnPropNameInRow="IsTerminal" msprop:Generator_ColumnPropNameInTable="IsTerminalColumn" msprop:Generator_UserColumnName="IsTerminal" type="xs:boolean" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Grammers" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="Tags_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Tags" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
  </xs:element>
</xs:schema>